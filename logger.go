package logger

import (
	"fmt"

	"net/http"
	"net/url"
	"os"
)

// Logger –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.
type Logger interface {
	Info(args ...interface{})
	Error(args ...interface{})
	Fatal(args ...interface{})
}

// TelegramLogger —Ä–µ–∞–ª–∏–∑—É–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Logger –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram.
type TelegramLogger struct {
	logger   Logger
	botToken string
	chatID   string
}

// NewTelegramLogger —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä TelegramLogger.
func NewTelegramLogger(botToken string, chatID string, logger Logger) *TelegramLogger {
	return &TelegramLogger{
		logger:   logger,
		botToken: botToken,
		chatID:   chatID,
	}
}

// Info –≤—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ Telegram.
func (t *TelegramLogger) Info(args ...interface{}) {
	message := fmt.Sprint(args...)
	t.logger.Info("INFO:", message)
	if err := t.SendToTelegram("‚ÑπÔ∏è " + message); err != nil {
		t.logger.Error("ERROR: could not send to Telegram:", err)
	}
}

// Error –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ Telegram.
func (t *TelegramLogger) Error(args ...interface{}) {
	message := fmt.Sprint(args...)
	t.logger.Error("ERROR:", message)
	if err := t.SendToTelegram("‚ùó " + message); err != nil {
		t.logger.Error("ERROR: could not send to Telegram:", err)
	}
}

// Fatal –≤—ã–≤–æ–¥–∏—Ç —Ñ–∞—Ç–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ Telegram –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.
func (t *TelegramLogger) Fatal(args ...interface{}) {
	message := fmt.Sprint(args...)
	t.logger.Error("FATAL:", message)
	if err := t.SendToTelegram("üö® " + message); err != nil {
		t.logger.Error("ERROR: could not send to Telegram:", err)
	}
	os.Exit(1)
}

// SendToTelegram –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —á–∞—Ç Telegram.
func (t *TelegramLogger) SendToTelegram(message string) error {
	telegramAPI := fmt.Sprintf("https://api.telegram.org/bot%s/sendMessage", t.botToken)

	// –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
	data := url.Values{}
	data.Set("chat_id", t.chatID)
	data.Set("text", message)
	data.Set("parse_mode", "HTML") // –ò—Å–ø–æ–ª—å–∑—É–µ–º HTML –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

	// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ POST-–∑–∞–ø—Ä–æ—Å–∞ –∫ API Telegram
	resp, err := http.PostForm(telegramAPI, data)
	if err != nil {
		return fmt.Errorf("could nod  Telegram: %w", err)
	}
	defer resp.Body.Close()

	if resp.StatusCode != http.StatusOK {
		return fmt.Errorf("–Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å –∫–æ–¥ –æ—Ç Telegram: %d", resp.StatusCode)
	}

	return nil
}
